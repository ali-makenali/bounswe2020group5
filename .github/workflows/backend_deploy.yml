name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ backend ]
  pull_request:
    branches: [ backend ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: docker login
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      # Runs a set of commands using the runners shell
      - name: docker build
        run: |
          docker build ./app/backend -t django_app 
          echo build is completed.
          
      - name: docker tag
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
        run: |
          docker tag django_app $DOCKER_USER/django_app
          echo tag is completed.
      - name: docker push
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
        run: |
          docker tag django_app $DOCKER_USER/django_app
          echo push is completed.
      
      - name: executing remote ssh commands using password
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
          AWS_HOST: ${{ secrets.AWS_HOST }}
          AWS_USERNAME: ${{ secrets.AWS_USERNAME }}
          AWS_PORT: ${{ secrets.AWS_PORT }}
        uses: appleboy/ssh-action@master
        with:
          host: 35.156.242.139
          username: ec2-user
          key: ${{ secrets.OMG_SECRET }}
          port: 22
          script: |
            docker rm $(docker stop $(docker ps | grep "bupazar/bupazar_backend" | cut -d ' ' -f1))
            docker run -d -p 8000:8000 $DOCKER_USER/django_app
